(()=>{"use strict";var n={917:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(537),i=e.n(t),o=e(645),a=e.n(o)()(i());a.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n\r\n/*Opera sets a red outline on focussed buttons which messes with animations or transitions. This stops Opera from doing so*/\r\nbutton:focus {\r\n    border:none;\r\n    outline: none;\r\n}","",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;;AAEA,2HAA2H;AAC3H;IACI,WAAW;IACX,aAAa;AACjB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n\r\n/*Opera sets a red outline on focussed buttons which messes with animations or transitions. This stops Opera from doing so*/\r\nbutton:focus {\r\n    border:none;\r\n    outline: none;\r\n}"],sourceRoot:""}]);const A=a},426:(n,r,e)=>{e.d(r,{Z:()=>C});var t=e(537),i=e.n(t),o=e(645),a=e.n(o),A=e(667),d=e.n(A),s=new URL(e(154),e.b),c=new URL(e(208),e.b),l=new URL(e(404),e.b),p=new URL(e(971),e.b),u=a()(i()),g=d()(s),m=d()(c),h=d()(l),f=d()(p);u.push([n.id,"h1 {\r\n    font-size: 30px;\r\n    padding: 20px;\r\n}\r\nheader {\r\n    width:100%;\r\n    text-align: center;\r\n    box-shadow: 0px 1px 5px grey;\r\n}\r\n\r\n.heading {\r\n    width: 70%;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    display:inline-block;\r\n}\r\n\r\n.nav {\r\n    width:50%;\r\n    margin: 0 auto;\r\n    display:inline-block;\r\n    text-align: center;\r\n}\r\n\r\n.nav ul {\r\n    display:flex;\r\n    justify-content: space-around;\r\n    padding: 10px 0;\r\n    font-size: 20px;\r\n}\r\n\r\nli {\r\n    transition: transform 0.3s ;\r\n}\r\n\r\nli:hover {\r\n    transform: translateY(-15%);\r\n    cursor: pointer;\r\n}\r\n\r\nli.active {\r\n    border-bottom: 2px solid grey;\r\n    pointer-events: none;\r\n}\r\n\r\n.main {\r\n    width: 100%;\r\n    text-align: center;\r\n}\r\n\r\n.main h1 {\r\n    margin-top: 20px;\r\n}\r\n\r\n#main-img {\r\n    background-image: url("+g+");\r\n    background-size: cover;\r\n    width: 40%;\r\n    height:400px;\r\n    margin: 0 auto;\r\n    border-radius: 50%;\r\n}\r\n\r\np {\r\n    padding: 20px 0;\r\n    font-size: 20px;\r\n    height: fit-content;\r\n}\r\n\r\n.offers {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    width: 70%;\r\n    margin: 40px auto;\r\n}\r\n\r\n.offer {\r\n    width: 30%;\r\n    border-radius: 10%;\r\n}\r\n\r\n.img {\r\n   width: 100%;\r\n   height: 300px;\r\n   display: flex;\r\n   justify-content: center;\r\n   align-items: center;\r\n   border-radius: 20%;\r\n   background-size: cover;\r\n}\r\n\r\n.img p {\r\n    width:100%;\r\n    color: white;\r\n    opacity: 0.7;\r\n}\r\n\r\n.desc {\r\n    height: 35%;\r\n    background-color: rgb(0,0,0,0.7);\r\n    width:100%;\r\n    display:flex;\r\n    align-items: center;\r\n}\r\n\r\n#selection {\r\n    background-image: url("+m+");\r\n}\r\n\r\n#generator {\r\n    background-image: url("+h+");\r\n}\r\n\r\n#add-recipe {\r\n    background-image: url("+f+");\r\n}\r\n\r\nbutton {\r\n    background-color: rgb(219, 224, 224);\r\n    border: none;\r\n    display:inline-block;\r\n    margin: 30px auto;\r\n    padding: 10px 20px;\r\n    border-radius: 8%;\r\n    font-size: 20px;\r\n}\r\n\r\nbutton:hover {\r\n    cursor:pointer;\r\n}\r\n\r\nform button {\r\n    margin: 0px auto 7px;\r\n    font-size: 15px;\r\n}\r\n\r\n.recipe-card {\r\n    width:33%;\r\n    margin: 0 auto;\r\n    border:1px solid black;\r\n}\r\n\r\n.card-header {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    padding: 10px 0px;\r\n\r\n}\r\n\r\n.card-header .img {\r\n    width:30%;\r\n}\r\n\r\n.card-header p {\r\n    padding: 20px 20px;\r\n}\r\n\r\n.card-info {\r\n    text-align: left;\r\n    margin-left: 20px;\r\n}\r\n\r\n#card-img {\r\n    background-image: url("+h+");\r\n    border-radius: 20%;\r\n    height: 200px;\r\n}\r\n\r\n.recipe-card ul {\r\n    text-align: left;\r\n    width: 25%;\r\n    margin: 0 auto;\r\n}\r\n\r\n.recipe-card li {\r\n    margin: 10px 0px;\r\n    font-size: 20px;\r\n}\r\n\r\nh2 {\r\n    font-size: 20px;\r\n}\r\n\r\n.dishes {\r\n    display:flex;\r\n    width: 70%;\r\n    margin: 0 auto;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.dishes .img {\r\n    width:30%;\r\n    margin: 20px;\r\n}\r\n\r\n.formBackground {\r\n    width: 100vw;\r\n    height:100vh;\r\n    z-index: 5;\r\n    position: fixed;\r\n    top:50%;\r\n    left:50%;\r\n    transform: translate(-50%, -50%) scale(1);\r\n    background-color: rgba(0, 0, 0, 0.144);\r\n}\r\n\r\n.dishForm {\r\n    background-color: #f0eef1;\r\n    border: 1px solid grey;\r\n    border-radius: 15px;\r\n    min-width: 250px;\r\n    width: 20%;\r\n    position: fixed;\r\n    top:50%;\r\n    left:50%;\r\n    transform: translate(-50%, -50%) scale(1);\r\n    margin: 0px auto;\r\n    max-height: 100vh;\r\n    overflow: scroll;\r\n}\r\n\r\nform {\r\n    margin: 0 auto;\r\n    width:90%;\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    gap: 10px;\r\n    font-family: poppins;\r\n}\r\n\r\nform h2 {\r\n    padding:10px;\r\n}\r\n\r\ninput {\r\n    display:block;\r\n    padding: 10px;\r\n    font-family: inherit;\r\n    border:none;\r\n    background-color: white;\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    border-radius: 5px;\r\n}\r\n\r\n.hide {\r\n    display: none;\r\n}\r\n\r\n.submit {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.submit:hover {\r\n    box-shadow: 1px 1px 3px grey;\r\n}\r\n\r\n.submit:active {\r\n    box-shadow: 0px 0px 1px grey;\r\n}\r\n\r\nform label {\r\n    font-size: 20px;\r\n    padding-bottom: 10px;\r\n}\r\n\r\n.Ingredients input, .Steps input {\r\n    margin: 10px auto;\r\n}\r\n\r\n#img-preview {\r\n    width: 200px;\r\n    height: 200px;\r\n    background-size: cover;\r\n    border: 1px solid black;\r\n}\r\n\r\n.desc p {\r\n    pointer-events: none;\r\n}\r\n\r\n.recipeBackground {\r\n    width: 100vw;\r\n    height:100vh;\r\n    z-index: 5;\r\n    position: fixed;\r\n    top:50%;\r\n    left:50%;\r\n    transform: translate(-50%, -50%) scale(1);\r\n    background-color: rgba(0, 0, 0, 0.144);\r\n}\r\n\r\n#allDishesCard .recipe-card {\r\n    min-width: 250px;\r\n    position: fixed;\r\n    top:50%;\r\n    left:50%;\r\n    transform: translate(-50%, -50%) scale(1);\r\n    max-height: 100vh;\r\n    background-color: #f0eef1;\r\n}\r\n\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["h1 {\r\n    font-size: 30px;\r\n    padding: 20px;\r\n}\r\nheader {\r\n    width:100%;\r\n    text-align: center;\r\n    box-shadow: 0px 1px 5px grey;\r\n}\r\n\r\n.heading {\r\n    width: 70%;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    display:inline-block;\r\n}\r\n\r\n.nav {\r\n    width:50%;\r\n    margin: 0 auto;\r\n    display:inline-block;\r\n    text-align: center;\r\n}\r\n\r\n.nav ul {\r\n    display:flex;\r\n    justify-content: space-around;\r\n    padding: 10px 0;\r\n    font-size: 20px;\r\n}\r\n\r\nli {\r\n    transition: transform 0.3s ;\r\n}\r\n\r\nli:hover {\r\n    transform: translateY(-15%);\r\n    cursor: pointer;\r\n}\r\n\r\nli.active {\r\n    border-bottom: 2px solid grey;\r\n    pointer-events: none;\r\n}\r\n\r\n.main {\r\n    width: 100%;\r\n    text-align: center;\r\n}\r\n\r\n.main h1 {\r\n    margin-top: 20px;\r\n}\r\n\r\n#main-img {\r\n    background-image: url(./thinking-woman.jpg);\r\n    background-size: cover;\r\n    width: 40%;\r\n    height:400px;\r\n    margin: 0 auto;\r\n    border-radius: 50%;\r\n}\r\n\r\np {\r\n    padding: 20px 0;\r\n    font-size: 20px;\r\n    height: fit-content;\r\n}\r\n\r\n.offers {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    width: 70%;\r\n    margin: 40px auto;\r\n}\r\n\r\n.offer {\r\n    width: 30%;\r\n    border-radius: 10%;\r\n}\r\n\r\n.img {\r\n   width: 100%;\r\n   height: 300px;\r\n   display: flex;\r\n   justify-content: center;\r\n   align-items: center;\r\n   border-radius: 20%;\r\n   background-size: cover;\r\n}\r\n\r\n.img p {\r\n    width:100%;\r\n    color: white;\r\n    opacity: 0.7;\r\n}\r\n\r\n.desc {\r\n    height: 35%;\r\n    background-color: rgb(0,0,0,0.7);\r\n    width:100%;\r\n    display:flex;\r\n    align-items: center;\r\n}\r\n\r\n#selection {\r\n    background-image: url(./dinner-collage.jpg);\r\n}\r\n\r\n#generator {\r\n    background-image: url(./pasta-dish.jpg);\r\n}\r\n\r\n#add-recipe {\r\n    background-image: url(./add-recipe.jpg);\r\n}\r\n\r\nbutton {\r\n    background-color: rgb(219, 224, 224);\r\n    border: none;\r\n    display:inline-block;\r\n    margin: 30px auto;\r\n    padding: 10px 20px;\r\n    border-radius: 8%;\r\n    font-size: 20px;\r\n}\r\n\r\nbutton:hover {\r\n    cursor:pointer;\r\n}\r\n\r\nform button {\r\n    margin: 0px auto 7px;\r\n    font-size: 15px;\r\n}\r\n\r\n.recipe-card {\r\n    width:33%;\r\n    margin: 0 auto;\r\n    border:1px solid black;\r\n}\r\n\r\n.card-header {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    padding: 10px 0px;\r\n\r\n}\r\n\r\n.card-header .img {\r\n    width:30%;\r\n}\r\n\r\n.card-header p {\r\n    padding: 20px 20px;\r\n}\r\n\r\n.card-info {\r\n    text-align: left;\r\n    margin-left: 20px;\r\n}\r\n\r\n#card-img {\r\n    background-image: url(./pasta-dish.jpg);\r\n    border-radius: 20%;\r\n    height: 200px;\r\n}\r\n\r\n.recipe-card ul {\r\n    text-align: left;\r\n    width: 25%;\r\n    margin: 0 auto;\r\n}\r\n\r\n.recipe-card li {\r\n    margin: 10px 0px;\r\n    font-size: 20px;\r\n}\r\n\r\nh2 {\r\n    font-size: 20px;\r\n}\r\n\r\n.dishes {\r\n    display:flex;\r\n    width: 70%;\r\n    margin: 0 auto;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.dishes .img {\r\n    width:30%;\r\n    margin: 20px;\r\n}\r\n\r\n.formBackground {\r\n    width: 100vw;\r\n    height:100vh;\r\n    z-index: 5;\r\n    position: fixed;\r\n    top:50%;\r\n    left:50%;\r\n    transform: translate(-50%, -50%) scale(1);\r\n    background-color: rgba(0, 0, 0, 0.144);\r\n}\r\n\r\n.dishForm {\r\n    background-color: #f0eef1;\r\n    border: 1px solid grey;\r\n    border-radius: 15px;\r\n    min-width: 250px;\r\n    width: 20%;\r\n    position: fixed;\r\n    top:50%;\r\n    left:50%;\r\n    transform: translate(-50%, -50%) scale(1);\r\n    margin: 0px auto;\r\n    max-height: 100vh;\r\n    overflow: scroll;\r\n}\r\n\r\nform {\r\n    margin: 0 auto;\r\n    width:90%;\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    gap: 10px;\r\n    font-family: poppins;\r\n}\r\n\r\nform h2 {\r\n    padding:10px;\r\n}\r\n\r\ninput {\r\n    display:block;\r\n    padding: 10px;\r\n    font-family: inherit;\r\n    border:none;\r\n    background-color: white;\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    border-radius: 5px;\r\n}\r\n\r\n.hide {\r\n    display: none;\r\n}\r\n\r\n.submit {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.submit:hover {\r\n    box-shadow: 1px 1px 3px grey;\r\n}\r\n\r\n.submit:active {\r\n    box-shadow: 0px 0px 1px grey;\r\n}\r\n\r\nform label {\r\n    font-size: 20px;\r\n    padding-bottom: 10px;\r\n}\r\n\r\n.Ingredients input, .Steps input {\r\n    margin: 10px auto;\r\n}\r\n\r\n#img-preview {\r\n    width: 200px;\r\n    height: 200px;\r\n    background-size: cover;\r\n    border: 1px solid black;\r\n}\r\n\r\n.desc p {\r\n    pointer-events: none;\r\n}\r\n\r\n.recipeBackground {\r\n    width: 100vw;\r\n    height:100vh;\r\n    z-index: 5;\r\n    position: fixed;\r\n    top:50%;\r\n    left:50%;\r\n    transform: translate(-50%, -50%) scale(1);\r\n    background-color: rgba(0, 0, 0, 0.144);\r\n}\r\n\r\n#allDishesCard .recipe-card {\r\n    min-width: 250px;\r\n    position: fixed;\r\n    top:50%;\r\n    left:50%;\r\n    transform: translate(-50%, -50%) scale(1);\r\n    max-height: 100vh;\r\n    background-color: #f0eef1;\r\n}\r\n\r\n"],sourceRoot:""}]);const C=u},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,i,o){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var A=0;A<this.length;A++){var d=this[A][0];null!=d&&(a[d]=!0)}for(var s=0;s<n.length;s++){var c=[].concat(n[s]);t&&a[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),r.push(c))}},r}},667:n=>{n.exports=function(n,r){return r||(r={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),r.hash&&(n+=r.hash),/["'() \t\n]|(%20)/.test(n)||r.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(i," */"),a=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[r].concat(a).concat([o]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var o={},a=[],A=0;A<n.length;A++){var d=n[A],s=t.base?d[0]+t.base:d[0],c=o[s]||0,l="".concat(s," ").concat(c);o[s]=c+1;var p=e(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var g=i(u,t);t.byIndex=A,r.splice(A,0,{identifier:l,updater:g,references:1})}a.push(l)}return a}function i(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,i){var o=t(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<o.length;a++){var A=e(o[a]);r[A].references--}for(var d=t(n,i),s=0;s<o.length;s++){var c=e(o[s]);0===r[c].references&&(r[c].updater(),r.splice(c,1))}o=d}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var i=void 0!==e.layer;i&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,i&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var o=e.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},971:(n,r,e)=>{n.exports=e.p+"d618f4c08708bf05c98b.jpg"},208:(n,r,e)=>{n.exports=e.p+"32bf9a71e20eb3a3a571.jpg"},404:(n,r,e)=>{n.exports=e.p+"4958c262395ee962cc90.jpg"},154:(n,r,e)=>{n.exports=e.p+"45dc54f3ffd18000930b.jpg"}},r={};function e(t){var i=r[t];if(void 0!==i)return i.exports;var o=r[t]={id:t,exports:{}};return n[t](o,o.exports,e),o.exports}e.m=n,e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var r=e.g.document;if(!n&&r&&(r.currentScript&&(n=r.currentScript.src),!n)){var t=r.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,e.nc=void 0;var t={};(()=>{e.d(t,{v:()=>w});var n=e(379),r=e.n(n),i=e(795),o=e.n(i),a=e(569),A=e.n(a),d=e(565),s=e.n(d),c=e(216),l=e.n(c),p=e(589),u=e.n(p),g=e(917),m={};m.styleTagTransform=u(),m.setAttributes=s(),m.insert=A().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),r()(g.Z,m),g.Z&&g.Z.locals&&g.Z.locals;var h=e(426),f={};f.styleTagTransform=u(),f.setAttributes=s(),f.insert=A().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=l(),r()(h.Z,f),h.Z&&h.Z.locals&&h.Z.locals,e(971);var C=e(208),v=e(404);e(154);let b=function(){document.querySelector("body").innerHTML='\n    <div id="content">\n        <header>\n        <div class="heading"><h1 class="main-heading">Dinner Planer</h1></div>\n        <div class="nav">\n            <ul>\n            <li class="active">Home</li>\n            <li>Generate Dishes</li>\n            <li>All Dishes</li>\n            <li>Add Dishes</li>\n            </ul>\n        </div>\n        </header>\n        <div class="main" id="Home">\n        <div class="heading">\n            <h1>What should we eat for dinner?</h1>\n        </div>\n        <div class="img" id="main-img"></div>\n        <div class="text">\n            <p>Safe the time you would spend on thinking about what to eat for dinner and spend it on important things!<br>\n            This Dinner Planer will show you a selection of recepies to chose from or just tell you what to have for dinner</p>\n        </div>\n        <div class="offers">\n            <div class="offer">\n                <div class="img" id="selection">\n                    <div class="desc"><p>View a selection<br>of delicious<br>recipies</p></div>\n                </div>\n            </div>\n            <div class="offer">\n                <div class="img" id="generator">\n                    <div class="desc"><p>Cant decide?<br>Let the dinner planer<br>show you what dish<br>to make for dinner</p></div>\n                </div>\n            </div>\n            <div class="offer">\n                <div class="img" id="add-recipe">\n                    <div class="desc"><p>Add your own recipies<br>to the collection</p></div>\n                </div>\n            </div>\n        </div>\n        </div>\n    </div>'},I=function(){document.querySelector(".main").innerHTML='\n            <div class="heading">\n                <h1>What should we eat for dinner?</h1>\n            </div>\n            <div class="img" id="main-img"></div>\n            <div class="text">\n                <p>Safe the time you would spend on thinking about what to eat for dinner and spend it on important things!<br>\n                This Dinner Planer will show you a selection of recepies to chose from or just tell you what to have for dinner</p>\n            </div>\n            <div class="offers">\n                <div class="offer">\n                    <div class="img" id="selection">\n                        <div class="desc"><p>View a selection<br>of delicious<br>recipies</p></div>\n                    </div>\n                </div>\n                <div class="offer">\n                    <div class="img" id="generator">\n                        <div class="desc"><p>Cant decide?<br>Let the dinner planer<br>show you what dish<br>to make for dinner</p></div>\n                    </div>\n                </div>\n                <div class="offer">\n                    <div class="img" id="add-recipe">\n                        <div class="desc"><p>Add your own recipies<br>to the collection</p></div>\n                    </div>\n                </div>\n            </div>'},B={loadPage:function(){document.querySelector(".main").innerHTML='\n          <button class="generate-dish">Generate Dish</button>\n          <div class="recipe-card"></div>'},generate:function(n){let r=function(n){let r=function(n){if(document.querySelector(".recipe-card").innerHTML){const r=n=>n.name===document.querySelector(".card-info h1").innerText;let e=n.findIndex(r);console.log(e);let t=n.splice(n.findIndex(r),1);console.log(t);let i=n[Math.floor(Math.random()*n.length)];return n.splice(e,0,t[0]),console.log(n),i}return n[Math.floor(Math.random()*n.length)]}(n),e="";for(let n of r.ingredients)e+=`<li>${n}</li>`;return[`\n        <div class="card-header">\n            <div class="img" id="card-img" style="background-image:url(${r.img});"></div>\n            <div class="card-info">\n               <h1>${r.name}</h1>\n               <p>prep Time: ${r.prepTime}</p>\n               <p>cooking Time: ${r.cookTime}</p>\n            </div>\n        </div>\n        <div class="Ingredients">\n            <h1>\n                Ingredients:\n            </h1>\n            <ul>\n                ${e}\n            </ul>\n        </div>`,r]}(n)[0];document.querySelector(".recipe-card").innerHTML=r}},x=(()=>{function n(n){let t=function(n){let r="";for(let e of n)console.log(e),r+=`<div class="img" style="background-image:url(${e.img});"><div class="desc"><p>${e.name}</p></div><button class="remove">remove</button></div>`;return console.log(r),r}(n);document.querySelector(".main").innerHTML=`<div class="dishes">\n      ${t}\n      </div>`,r(n),e(n)}function r(n){let r=document.querySelectorAll(".desc");for(let e of r)e.addEventListener("click",(r=>{a(n,r)}))}function e(n){let r=document.querySelectorAll(".remove");for(let e of r)e.addEventListener("click",(r=>{i.deleteDish(r,n)}))}function t(n,r){if(console.log(n.target.tagName),"DIV"===n.target.tagName){let e=r.findIndex((r=>n.target.children[0].innerText===r.name));return r[e]}if("button"===n.target.tagName){let e=r.findIndex((r=>n.target.parentNode.children[0].children[0].innerText===r.name));return r[e]}}let i={deleteDish:function(r,e){!function(n,r){let e=r.findIndex((r=>r==n));r.splice(e,1)}(t(r,e),e),function(n){localStorage.setItem("dishArray",JSON.stringify(n))}(e),n(e)}};function o(){document.querySelector(".main").removeChild(document.querySelector(".recipeBackground"))}function a(n,r){!function(n){let r=document.createElement("div");r.classList.add("recipeBackground"),r.id="allDishesCard",r.innerHTML=n,document.querySelector(".main").append(r)}(function(n){let r="";for(let e of n.ingredients)r+=`<li>${e}</li>`;let e="";for(let r of n.steps)e+=`<li>${r}</li>`;return`<div class="recipe-card">\n          <div class="card-header">\n            <div class="img" id="card-img" style="background-image:url(${n.img});"></div>\n            <div class="card-info">\n            <h1>${n.name}</h1>\n            <p>prep Time: ${n.prepTime}</p>\n            <p>cooking Time: ${n.cookTime}</p>\n            </div>\n          </div>\n          <div class="Ingredients">\n            <h1>\n              Ingredients:\n            </h1>\n            <ul>\n              ${r}\n            </ul>\n          </div>\n          <div class="Steps">\n            <h1>\n              Steps:\n            </h1>\n            <ul>\n              ${e}\n            </ul>\n          </div>\n          </div>`}(t(r,n)));let e=document.querySelector(".recipeBackground"),i=document.querySelector(".recipe-card");e.addEventListener("click",o),i.addEventListener("mouseover",(()=>{e.removeEventListener("click",o)})),i.addEventListener("mouseleave",(()=>{e.addEventListener("click",o)}))}return{loadPage:n,addListenersToDivs:r,addListenersToRemoveButtons:e,showRecipeCard:a}})(),y=(()=>{function n(){document.querySelector(".main").innerHTML='<button class="generate-dish">Add your own Dish</button>\n    <div class="formBackground hide">\n        <div class="dishForm hide">\n            <form>\n                <h2>Dish Data</h2>\n                <input type="text" name="name" placeholder="Dish Name"/>\n                <input type="text" name="prepTime" placeholder="Preperation Time"/>\n                <input type="text" name="cookTime" placeholder="Cooking Time"/>\n                <div class="Ingredients">\n                <label>Ingredients</label>\n                <input type="text" name="ingredient1" placeholder="Ingredient 1"/>\n                </div>\n                <button type="button" class="addIngredient">Add Ingredient Field</button>\n                <div class="Steps">\n                <label>Cooking Steps</label>\n                <input type="text" name="Step1" placeholder="Step1"/>\n                </div>\n                <button type="button" class="addStep">Add Step</button>\n                <input id="recipe-img" type="file" name="recipe-img" accept="image/jpeg, image/png, image/jpg"/>\n                <div id="img-preview"></div>\n                <input class="submit" type="submit" value="Save Dish"/>\n            </form>\n        </div>\n    </div>',document.querySelector("button").addEventListener("click",(()=>{let n=document.querySelector(".formBackground"),r=document.querySelector(".dishForm");n.classList.remove("hide"),r.classList.remove("hide"),n.addEventListener("click",y.closeForm),r.addEventListener("mouseover",(()=>{n.removeEventListener("click",y.closeForm)})),r.addEventListener("mouseleave",(()=>{n.addEventListener("click",y.closeForm)}))})),document.querySelector(".addIngredient").addEventListener("click",(()=>{e("Ingredient")})),document.querySelector(".addStep").addEventListener("click",(()=>{e("Step")})),document.querySelector(".submit").addEventListener("click",(n=>{n.preventDefault(),r(w)})),document.querySelector("#recipe-img").addEventListener("change",t)}function r(r,e=function(){let n=new FormData(document.querySelector("form")),r=[];for(let e of n.entries())r.push(e[1]);return r}()){let t=[],i=[],o=document.querySelector(".Ingredients"),a=document.querySelector(".Steps");for(let n=e.length-1-a.children.length+1;n<e.length-1;n++)i.push(e[n]);for(let n=e.length-1-a.children.length-o.children.length+2;n<e.length-a.children.length+1;n++)t.push(e[n]);let A=function(n){let r=new FileReader;return r.readAsDataURL(n),console.log(r.readyState),r.result}(document.querySelector("#recipe-img").files[0]);console.log(A);let d=function(n,r,e,t,i,o){return{name:n,prepTime:r,cookTime:e,ingredients:t,steps:i,img:o}}(e[0],e[1],e[2],t,i,A);console.log(d.img),r.push(d),function(n){localStorage.setItem("dishArray",JSON.stringify(n))}(r),n()}function e(n){let r=document.createElement("input"),e=document.querySelector(`.${n}s`);r.setAttribute("type","text"),r.setAttribute("name",`${n} ${e.children.length-1}`),r.setAttribute("placeholder",`${n} ${e.children.length}`),e.appendChild(r)}function t(){let n=document.querySelector("#recipe-img").files[0],r="",e=new FileReader;e.addEventListener("load",(()=>{r=e.result,document.querySelector("#img-preview").style.backgroundImage=`url(${r})`})),e.readAsDataURL(n),window.setTimeout((()=>{}),100)}return{loadPage:n,loadDishArray:function(){return JSON.parse(localStorage.getItem("dishArray"))||[{name:"Kartoffeln mit Spinat",prepTime:"20min",cookTime:"20min",ingredients:["Kartoffeln","Spinat","Salz"],steps:["step1","step2"],img:C},{name:"Nudeln mit Soße",prepTime:"5min",cookTime:"15min",ingredients:["Nudeln","Passierte Tomaten","Sahne","Muskat","Schinkenwürfel"],steps:["step1","step2"],img:v}]},closeForm:function(){document.querySelector(".dishForm").classList.add("hide"),document.querySelector(".formBackground").classList.add("hide")},createNewInputField:e,addDishObjectToArray:r}})();b();let w=y.loadDishArray();if(window.localStorage.getItem("one")){let n=JSON.parse(window.localStorage.getItem("one"));console.log(n)}(()=>{let n=document.querySelectorAll("ul li"),r=n.item(0),e=n.item(1),t=n.item(2),i=n.item(3);function o(n){"Generate Dishes"===n.target.innerText?document.querySelector("button.generate-dish").addEventListener("click",(()=>{B.generate(w)})):"Add Dishes"===n.target.innerText||n.target.innerText}function a(){document.querySelector(".main").replaceChildren()}function A(n){document.querySelector("li.active").classList.remove("active"),n.target.classList.add("active")}r.addEventListener("click",(n=>{a(),I(),A(n)})),e.addEventListener("click",(n=>{a(),B.loadPage(),A(n),o(n)})),t.addEventListener("click",(n=>{a(),x.loadPage(w),A(n),o(n)})),i.addEventListener("click",(n=>{a(),y.loadPage(),A(n),o(n)}))})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,